// Generated by CoffeeScript 1.10.0
(function() {
  var ALTUI_PluginDisplays;

  ALTUI_PluginDisplays = (function() {
    var display, html, j, label, state, style, textCls, v, value;

    function ALTUI_PluginDisplays() {}

    ALTUI_PluginDisplays.getStyle = function() {
      return ".altui-watts, .altui-volts, .altui-dimmable, .altui-countdown  {font-size: 16px;}\n.altui-temperature  {font-size: 16px;}\n.altui-temperature-heater  {font-size: 12px;}\n.altui-temperature-minor  {font-size: 8px;}\n.altui-humidity, .altui-light  {font-size: 18px;}\n.altui-motion {font-size: 22px;}\n.altui-keypad-status {font-size: 14px;}\n.altui-weather-text, .altui-lasttrip-text, .altui-vswitch-text {font-size: 11px;}\n.altui-red , .btn.altui-red { color:red;}\n.altui-blue, .btn.altui-blue { color:blue;}\n.altui-orange { color:darkorange;}\n.altui-magenta { color:magenta;}\n.altui-multiswitch-container { position:absolute; left:58px; right:16px; } .altui-multiswitch-container .row { padding-top:1px; padding-bottom:1px; margin-left:0px; margin-right:0px;} .altui-multiswitch-container .col-xs-3 { padding-left:1px; padding-right:1px; }  .altui-multiswitch-open { white-space: nowrap; overflow: hidden; text-overflow: ellipsis; padding-left:0px; padding-right:0px; margin-left:0px; margin-right:0px; width: 100%; max-width: 100% }\n.altui-heater-container { position:absolute; left:71px; right:16px; } .altui-heater-container .row { padding-top:1px; padding-bottom:1px; margin-left:0px; margin-right:0px;} .altui-heater-container .col-xs-3 { padding-left:1px; padding-right:1px; text-align:center;}  .altui-heater-btn { white-space: nowrap; overflow: hidden; text-overflow: ellipsis; padding-left:0px; padding-right:0px; margin-left:0px; margin-right:0px; width: 100%; max-width: 100% }\n.altui-heater-container select.input-sm { height:22px; padding:0;} \n.altui-cyan { color:cyan;}\n.altui-dimmable-slider { margin-left: 60px; margin-right: 70px;}    \n.altui-colorpicker { margin-top: 2px; width:30px; margin-right: 15px; } \n.altui-infoviewer-log-btn,.altui-infoviewer-btn,.altui-window-btn,.altui-datamine-open { margin-top: 10px; }    \n.altui-infoviewer-pattern { font-size: 14px; }  \ndiv.altui-windowcover button.btn-sm { width: 4em; }\n.altui-sonos-text, .altui-combsw-text, .altui-sysmon-text, .altui-veraalerts-text {font-size: 11px;}\n.altui-multistring-text-div { margin-top: 2px; height: 48px; overflow: hidden; }\"\n.altui-multistring-text-some { font-size: 11px; }\n.altui-multistring-text-all { font-size: 7px; }\n.altui-multistring-text-1, .altui-multistring-text-2 { }\n.altui-upnpproxy-text { font-size: 11px; margin-left: 2px; margin-top: 22px; }\n.altui-plts-btn-div { margin-top: 4px; height: 48px; overflow:hidden; } .altui-plts-btn { width: 50px; font-size: 11px; line-height: 1.5; } .altui-plts-btn-on { color: white; background-color: #006C44; } .altui-plts-btn-on:hover, .altui-plts-btn-on:focus, .altui-plts-btn-on:active, .altui-plts-btn-on:active:focus, .altui-plts-btn-on.active:focus { color: white; background-color: #006C44; outline: 0 none; box-shadow: none; } .altui-plts-time-text-div { float: left; margin-left: 6px; margin-top: 5px; font-size: 9px; overflow: hidden; }";
    };

    ALTUI_PluginDisplays._isBusySatus = function(device) {
      var ref;
      return (device.status != null) && ((ref = device.status) !== (-1) && ref !== 2 && ref !== 4);
    };

    ALTUI_PluginDisplays.createOnOffButton = function(onoff, id, csvlabel, extracls) {
      var css, str;
      str = csvlabel.split(',');
      css = "";
      onoff = onoff || 0;
      if (onoff > 0) {
        onoff = 1;
      }
      switch (onoff) {
        case null || false || "0" || 0:
          str = str[0];
          css = "";
          break;
        case true || "1" || 1:
          str = str[1];
          css = "checked";
          break;
        default:
          str = "";
          css = "spinner";
      }
      return "<div class='altui-button-onoff " + (extracls || '') + "'>\n<div id='" + id + "' class='onoffswitch'>\n    <input type='checkbox' name='onoffswitch' class='onoffswitch-checkbox'  " + css + ">\n    <label class='onoffswitch-label' for='myonoffswitch'>\n        <span class='onoffswitch-inner'></span>\n        <span class='onoffswitch-switch'></span>\n    </label>\n</div>\n<div class='altui-button-stateLabel'>" + str + "</div>\n</div>";
    };

    ALTUI_PluginDisplays._toggleButton = function(altuiid, htmlselector, service, variable, cbfunc) {
      var device, status;
      device = MultiBox.getDeviceByAltuiID(altuiid);
      status = MultiBox.getStatus(device, service, variable);
      if ($.isNumeric(status)) {
        status = parseInt(status);
        if (status > 0) {
          status = 1;
        }
        $(htmlselector).find("input").prop("checked", status === 0);
        return cbfunc(device(1 - status));
      }
    };

    ALTUI_PluginDisplays._drawCamera = function(device) {
      var div, img, streamurl, urlHead, video;
      video = (MyLocalStorage.getSettings('ShowVideoThumbnail') || 0) === 1;
      urlHead = MultiBox.getUrlHead(device.altuiid);
      if (MultiBox.isRemoteAccess() || (video === false)) {
        img = $("<img class='altui-camera-picture'></img>").attr('src', (urlHead + "?") + $.params({
          id: 'request_image',
          res: 'low',
          cam: device.id,
          t: new Date().getTime()
        })).height(50).width(66);
        return img.wrap("<div></div>").parent().html();
      } else {
        streamurl = "url(http://" + device.ip + (MultiBox.getStatus(device, 'urn:micasaverde-com:serviceId:Camera1', 'DirectStreamingURL'));
        div = $("<div class='altui-camera-picture'></div>").css({
          "background-image": streamurl,
          "background-size": "cover",
          "margin-left": 55,
          "margin-top": 1
        }).height(50).width(50);
        return div.wrap("<div></div>").parent().html();
      }
    };

    ALTUI_PluginDisplays._drawVswitch = function(device) {
      var dl1, html, i, j, len, ref, status, v;
      status = parseInt(MultiBox.getStatus(device, 'urn:upnp-org:serviceId:VSwitch1', 'Status'));
      html = ALTUI_PluginDisplays.createOnOffButton(status, "altui-vswitch-" + device.altuiid, _T("OFF", "ON"), 'pull-right');
      ref = ['Text1', 'Text2'];
      for (i = j = 0, len = ref.length; j < len; i = ++j) {
        v = ref[i];
        dl1 = MultiBox.getStatus(device, 'urn:upnp-org:serviceId:VSwitch1', v);
        if (dl1 != null) {
          html += $("<div class='altui-vswitch-text'></div>").text(dl1).wrap("<div></div>").parent().html();
        }
      }
      html += "<script type='text/javascript'>\";\n        $('div#altui-vswitch-" + device.altuiid + "').on('click touchend', function() { \n                ALTUI_PluginDisplays.toggleVswitch('" + device.altuiid + "',\n                                                   'div#altui-vswitch-" + device.altuiid + "'); \n        });\n</script>\";";
      return html;
    };

    ALTUI_PluginDisplays._drawTempSensor = function(device) {
      var status, ws;
      ws = MultiBox.getWeatherSettings();
      if (ws.tempFormat == null) {
        ws.tempFormat = '';
      }
      status = parseFloat(MultiBox.getStatus(device, 'urn:upnp-org:serviceId:TemperatureSensor1', 'CurrentTemerature'));
      return "<span class='altui-temperature'>" + status + "&deg;" + ws.tempFormat + "</span>";
    };

    ALTUI_PluginDisplays._internaldrawZoneThermostat = function(device, userOperatingMode1Items, userHVACFanOperatingMode1Items, isHeader) {
      var HVAC_INCREMENT, _button, _temperature, allsetpoints, autosetpoint, bNewControl, cls, coldsetpoint, coldsetpoint_current, coldsetpoint_target, controller, curTemp, currentmodesetpoint, currentmodesetpoint_target, heatsetpoint, heatsetpoint_current, heatsetpoint_target, html, idx, isUI5, item, j, k, len, len1, modeFan, modeStatus, splits, ws;
      _button = function(altuiid, colorclass, glyph, service, action, name, value, incr) {
        return "<button type='button' \nstyle='width:50%;' \nclass='altui-heater-btn altui-setpointcontrol-" + altuiid + " " + colorclass + " btn bt-default btn-xs'\ndata-service='" + service + "'\ndata-action='" + action + "'\ndata-name='" + name + "'\ndata-value='" + value + "'\ndata-incr='" + incr + "'>" + glyph + "</button>";
      };
      _temperature = function(temp, format, deftxt) {
        if (temp != null) {
          return parseFloat(curTemp).toFixed(1) + "&deg;" + ws.tempFormat;
        } else {
          return deftxt;
        }
      };
      HVAC_INCREMENT = 0.5;
      controller = MultiBox.controllerOf(device.altuiid).controller;
      isUI5 = MultiBox.isUI5(controller);
      ws = MultiBox.getWeatherSettings();
      if (ws.tempFormat == null) {
        ws.tempFormat = "";
      }
      modeStatus = MultiBox.getStatus(device, 'urn:upnp-org:serviceId:HVAC_UserOperatingMode1', 'ModeStatus');
      modeFan = MultiBox.getStatus(device, 'urn:upnp-org:serviceId:HVAC_FanOperatingMode1', 'Mode');
      curTemp = MultiBox.getStatus(device, 'urn:upnp-org:serviceId:TemperatureSensor1', 'CurrentTemperature');
      allsetpoints = MultiBox.getStatus(device, 'urn:upnp-org:serviceId:TemperatureSetpoint1', 'AllSetpoints');
      heatsetpoint_current = MultiBox.getStatus(device, 'urn:upnp-org:serviceId:TemperatureSetpoint1_Heat', 'CurrentSetpoint');
      heatsetpoint_target = MultiBox.getStatus(device, 'urn:upnp-org:serviceId:TemperatureSetpoint1_Heat', 'SetpointTarget');
      coldsetpoint_current = MultiBox.getStatus(device, 'urn:upnp-org:serviceId:TemperatureSetpoint1_Cool', 'CurrentSetpoint');
      coldsetpoint_target = MultiBox.getStatus(device, 'urn:upnp-org:serviceId:TemperatureSetpoint1_Cool', 'SetpointTarget');
      autosetpoint = null;
      currentmodesetpoint = null;
      currentmodesetpoint_target = null;
      bNewControl = (isUI5 === false) && (isNullOrEmpty(allsetpoints) === false);
      if (bNewControl) {
        bNewControl = MyLocalStorage.getSettings('UseUI7Heater') === 1;
      }
      if (bNewControl) {
        AltuiDebug.debug("Using new form of heater as AllSetpoints is not empty: " + allsetpoints);
        splits = allsetpoints.split(',');
        heatsetpoint_current = splits[0] || "";
        coldsetpoint_current = splits[1] || "";
        autosetpoint = splits[2] || "";
        currentmodesetpoint = MultiBox.getStatus(device, 'urn:upnp-org:serviceId:TemperatureSetpoint1', 'CurrentSetpoint');
        currentmodesetpoint_target = MultiBox.getStatus(device, 'urn:upnp-org:serviceId:TemperatureSetpoint1', 'SetpointTarget');
      }
      html = "<div class='altui-heater-container pull-right'>\n    <div class='row'>\n        <div class='col-xs-3'>\n            <span class='altui-temperature' >\n                " + (_temperature(curTemp, ws.tempFormat, '--')) + "\n            </span>\n        </div>\n    <div class='col-xs-3'>";
      heatsetpoint = heatsetpoint_target || parseFloat($("#altui-heatsetpoint-" + device.altuiid).text()) || heatsetpoint_current;
      if (heatsetpoint != null) {
        html += "<span \n class='altui-temperature-minor altui-red pull-left' \n id='altui-heatsetpoint-current-" + device.altuiid + "'>\n    " + (_temperature(heatsetpoint_current, ws.tempFormat, '')) + "\n</span>\n<span \n class='altui-temperature-minor altui-red pull-right' \n id='altui-heatsetpoint-target-" + device.altuiid + "'>\n    " + (_temperature(heatsetpoint_target, ws.tempFormat, '')) + "\n</span>\n<span \n class='altui-temperature-heater altui-red' \n id='altui-heatsetpoint-" + device.altuiid + "'>\n    " + (_temperature(heatsetpoint, ws.tempFormat, '')) + "\n</span>";
      }
      html += "</div>\n<div class='col-xs-3'>";
      coldsetpoint = coldsetpoint_target || parseFloat($("#altui-coldsetpoint-" + device.altuiid).text()) || coldsetpoint_current;
      if (!isHeater && (coldsetpoint != null)) {
        html += "<span \n class='altui-temperature-minor altui-blue pull-left' \n id='altui-coldsetpoint-current-" + device.altuiid + "'>\n    " + (_temperature(coldsetpoint_current, ws.tempFormat, '')) + "\n</span>\n<span \n class='altui-temperature-minor altui-blue pull-right' \n id='altui-coldsetpoint-target-" + device.altuiid + "'>\n    " + (_temperature(coldsetpoint_target, ws.tempFormat, '')) + "\n</span>\n<span \n class='altui-temperature-heater altui-blue' \n id='altui-coldsetpoint-" + device.altuiid + "'>\n    " + (_temperature(coldsetpoint, ws.tempFormat, '')) + "\n</span>";
      }
      html += "</div>\n<div class='col-xs-3'>";
      if (autosetpoint != null) {
        html += "<span \n class='altui-temperature-heater' \n id='altui-autosetpoint-" + device.altuiid + "'>\n    " + (_temperature(autosetpoint, ws.tempFormat, '')) + "\n</span>";
      }
      html += "    </div>\n</div>\n<div class='row'>\n    <div class='col-xs-3'>";
      if (userOperatingMode1Items.length > 0) {
        html += "<select \n id='altui-heater-select-" + device.altuiid + "' \n class='altui-heater-select form-control input-sm'>";
        for (idx = j = 0, len = userOperatingMode1Items.length; j < len; idx = ++j) {
          item = userOperatingMode1Items[idx];
          html += "<option \n data-service='" + item.service + "' \n data-action='" + item.action + "' \n data-name='" + item.name + "' \n data-value='" + item.value + "' \n " + (item.value === modeStatus ? 'selected' : '') + ">\n    " + item.label + "\n</option>            ";
        }
        html += "</select>";
      }
      html += "</div>\n<div class='col-xs-3'>";
      if (!bNewControl) {
        html += _button(device.altuiid, "altui-red", upGlyph, "urn:upnp-org:serviceId:TemperatureSetpoint1_Heat", "SetCurrentSetpoint", "NewCurrentSetpoint", "altui-heatsetpoint-" + device.altuiid, HVAC_INCREMENT);
        html += _button(device.altuiid, "altui-red", downGlyph, "urn:upnp-org:serviceId:TemperatureSetpoint1_Heat", "SetCurrentSetpoint", "NewCurrentSetpoint", "altui-heatsetpoint-" + device.altuiid, -HVAC_INCREMENT);
      } else {
        html += _button(device.altuiid, "", upGlyph, "urn:upnp-org:serviceId:TemperatureSetpoint1", "SetCurrentSetpoint", "NewCurrentSetpoint", "altui-autosetpoint-" + device.altuiid, HVAC_INCREMENT);
      }
      html += "</div>\n<div class='col-xs-3'>";
      if (!bNewControl) {
        html += _button(device.altuiid, "altui-blue", upGlyph, "urn:upnp-org:serviceId:TemperatureSetpoint1_Cool", "SetCurrentSetpoint", "NewCurrentSetpoint", "altui-coldsetpoint-" + device.altuiid, HVAC_INCREMENT);
        html += _button(device.altuiid, "altui-blue", downGlyph, "urn:upnp-org:serviceId:TemperatureSetpoint1_Cool", "SetCurrentSetpoint", "NewCurrentSetpoint", "altui-coldsetpoint-" + device.altuiid, -HVAC_INCREMENT);
      } else {
        html += _button(device.altuiid, "", downGlyph, "urn:upnp-org:serviceId:TemperatureSetpoint1", "SetCurrentSetpoint", "NewCurrentSetpoint", "altui-autosetpoint-" + device.altuiid, -HVAC_INCREMENT);
      }
      html += "</div>\n<div class='col-xs-3'>";
      if (userHVACFanOperatingMode1Items.length > 0) {
        html += "<select \n id='altui-heater-select-" + device.altuiid + "' \n class='altui-heater-select form-control input-sm'>";
        for (idx = k = 0, len1 = userHVACFanOperatingMode1Items.length; k < len1; idx = ++k) {
          item = userHVACFanOperatingMode1Items[idx];
          html += "<option \n data-service='" + item.service + "' \n data-action='" + item.action + "' \n data-name='" + item.name + "' \n data-value='" + item.value + "' \n " + (item.value === modeFan ? 'selected' : '') + ">\n    " + item.label + "\n </option>       ";
        }
        html += "</select>";
      }
      html += "    </div>\n</div>\n</div>";
      cls = "button.altui-setpointcontrol-" + device.altuiid;
      $(".altui-mainpanel").off('click', cls).on('click', cls, device.altuiid, function(event) {
        var action, doItNow, incr, name, selected, service, timer, value;
        selected = $(this);
        service = $(selected).data('service');
        action = $(selected).data('action');
        name = $(selected).data('name');
        value = parseFloat($('#' + $(selected).data('value')).text());
        incr = $(selected).data('incr');
        $('#' + $(selected).data('value')).html((value + incr).toFixed(1) + '&deg;');
        doItNow = function(obj) {
          var params;
          params = {};
          params[obj.name] = obj.value;
          MultiBox.runActionByAltuiID(obj.altuiid, obj.service, obj.action, params);
          console.log("timer doItNow() :" + JSON.stringify(obj));
          return $(obj.button).data("timer", null);
        };
        timer = $(this).data("timer");
        if (timer != null) {
          clearTimeout(timer);
          console.log(("clear Timeout(" + device.altuiid + ")").format(timer));
        }
        timer = setTimeout(doItNow, 1500, {
          button: $(this),
          altuiid: event.data,
          name: name,
          service: service,
          action: action,
          value: value + incr
        });
        console.log("set Timeout(" + timer + ")  params:" + (value + incr));
        return $(this).data("timer", timer);
      });
      html += "<script type='text/javascript'>\n    $('select#altui-heater-select-" + device.altuiid + "').on('change', function() {\n       var selected = $(this).find(':selected');                   \n       var service = $(selected).data('service');                  \n       var action = $(selected).data('action');                    \n       var name = $(selected).data('name');                    \n       var value = $(selected).data('value');                  \n       var params = {}; params[name]=value;                \n       MultiBox.runActionByAltuiID('" + device.altuiid + ", service, action, params);\n</script>";
      return html;
    };

    ALTUI_PluginDisplays._drawZoneThermostat = function(device) {
      var S_FOM, S_UOM, userHVACFanOperatingMode1Items, userOperatingMode1Items;
      S_UOM = "urn:upnp-org:serviceId:HVAC_UserOperatingMode1";
      userOperatingMode1Items = [
        {
          label: "Off",
          value: "Off",
          service: S_UOM,
          action: "SetModeTarget",
          name: "NewMode"
        }, {
          label: "Auto",
          value: "AutoChangeOver",
          service: S_UOM,
          action: "SetModeTarget",
          name: "NewMode"
        }, {
          label: "Cool",
          value: "CoolOn",
          service: S_UOM,
          action: "SetModeTarget",
          name: "NewMode"
        }, {
          label: "Heat",
          value: "HeatOn",
          service: S_UOM,
          action: "SetModeTarget",
          name: "NewMode"
        }
      ];
      S_FOM = "urn:upnp-org:serviceId:HVAC_FanOperatingMode1";
      userHVACFanOperatingMode1Items = [
        {
          label: "Auto",
          value: "Auto",
          service: S_FOM,
          action: "SetMode",
          name: "NewMode"
        }, {
          label: "On",
          value: "ContinuousOn",
          service: S_FOM,
          action: "SetMode",
          name: "NewMode"
        }, {
          label: "Cycle",
          value: "PeriodicOn",
          service: S_FOM,
          action: "SetMode",
          name: "NewMode"
        }
      ];
      return this._internaldrawZoneThermostat(device, userOperatingMode1Items, userHVACFanOperatingMode1Items, false);
    };

    ALTUI_PluginDisplays._drawHeater = function(device) {
      var S_UOM, userHVACFanOperatingMode1Items, userOperatingMode1Items;
      S_UOM = "urn:upnp-org:serviceId:HVAC_UserOperatingMode1";
      userOperatingMode1Items = [
        {
          label: "Off",
          value: "Off",
          service: S_UOM,
          action: "SetModeTarget",
          name: "NewMode"
        }, {
          label: "Heat",
          value: "HeatOn",
          service: S_UOM,
          action: "SetModeTarget",
          name: "NewMode"
        }
      ];
      userHVACFanOperatingMode1Items = [];
      return this._internaldrawZoneThermostat(device, userOperatingMode1Items, userHVACFanOperatingMode1Items, false);
    };

    ALTUI_PluginDisplays._drawHumidity = function(device) {
      var value;
      value = parseInt(MultiBox.getStatus(device, 'urn:micasaverde-com:serviceId:HumiditySensor1', 'CurrentLevel'));
      return "<span class='altui-humidity'>" + value + "</span>";
    };

    ALTUI_PluginDisplays._drawLight = function(device) {
      var value;
      value = parseInt(MultiBox.getStatus(device, 'urn:micasaverde-com:serviceId:LightSensor1', 'CurrentLevel'));
      return "<span class='altui-light'>" + value + " lux</span>";
    };

    ALTUI_PluginDisplays.onClickWindowCoverButton = function(e) {
      var actionname, altuiid;
      altuiid = e.closest('.altui-device').data('altuiid');
      actionname = e.prop('id').substr("altui-window-".length);
      if (actionname === "Stop") {
        return MultiBox.runActionByAltuiID(altuiid, "urn:upnp-org:serviceId:WindowCovering1", "Stop", {});
      } else {
        return MultiBox.runActionByAltuiID(altuiid, "urn:upnp-org:serviceId:Dimming1", "SetLoadLevelTarget", {
          newLoadlevelTarget: actionname === "Up" ? 100 : 0
        });
      }
    };

    ALTUI_PluginDisplays._drawWindowCover = function(device) {
      var status;
      status = MultiBox.getStatus(device, "urn:upnp-org:serviceId:Dimming1", "LoadLevelStatus");
      return "<div class='pull-right'>\n    <div \n     id='altui-wc-\"+device.altuiid+\"' \n     class='btn-group altui-windowcover' \n     role='group' \n     aria-label='...'>\n        <button \n         id ='altui-window-Up' \n         type='button' \n         class='altui-window-btn btn btn-default btn-sm " + (status === 100 ? 'active' : '') + "'>\n            " + (_T("Up")) + "\n        </button>\n        <button \n         id ='altui-window-Stop' \n         type='button' \n         class='altui-window-btn btn btn-default btn-sm'>\n            " + (_T("Stop")) + "\n        </button>\"\n        <button \n         id ='altui-window-Down' \n         type='button' \n         class='altui-window-btn btn btn-default btn-sm " + (status === 0 ? 'active' : '') + ">\n            " + (_T("Down")) + "\n        </button>\n    </div>\n</div>\n<script type='text/javascript'>\n    $('div#altui-wc-" + device.altuiid + " button').on('click touchend', function() { \n        ALTUI_PluginDisplays.onClickWindowCoverButton($(this)); \n    } );\n</script>";
    };

    ALTUI_PluginDisplays._onSliderChange = function(event, ui) {
      var altuiid;
      altuiid = $(ui.handle).closest(".altui-device").data("altuiid");
      return MultiBox.runActionByAltuiID(altuiid, "urn:upnp-org:serviceId:Dimming1", "SetLoadLevelTarget", {
        newLoadlevelTarget: ui.value
      });
    };

    ALTUI_PluginDisplays._onColorPicker = function(e, altuiid, color) {
      var currentColor, device;
      device = MultiBox.getDeviceByAltuiID(altuiid);
      MultiBox.setColor(device, color.toHexString());
      currentColor = '0=0,1=0,2=#{parseInt(color._r)},3=#{parseInt(color._g)},4=#{parseInt(color._b)}';
      return MultiBox.setStatus(device, 'urn:micasaverde-com:serviceId:Color1', 'CurrentColor', currentColor);
    };

    ALTUI_PluginDisplays._drawDimmable = function(device, colorpicker) {
      var current, html, level, onebody, parts, status;
      onebody = $(".altui-device-body:first");
      level = parseInt(MultiBox.getStatus(device, 'urn:upnp-org:serviceId:Dimming1', 'LoadLevelTarget'));
      if (isNaN(level)) {
        level = parseInt(MultiBox.getStatus(device, 'urn:upnp-org:serviceId:Dimming1', 'LoadLevelStatus'));
      }
      html = "<span id='slider-val-" + device.altuiid + "' class='altui-dimmable'>\n    " + level + "%\n</span>";
      status = parseInt(MultiBox.getStatus(device, 'urn:upnp-org:serviceId:SwitchPower1', 'Status'));
      if (_isBusyStatus(device)) {
        status = -1;
      }
      html += this.createOnOffButton(status, "altui-onoffbtn-" + device.altuiid, _T("OFF,ON"), "pull-right");
      current = "#ffffff";
      if (colorpicker) {
        current = MultiBox.getStatus(device, 'urn:micasaverde-com:serviceId:Color1', 'TargetColor');
        if (current == null) {
          current = MultiBox.getStatus(device, 'urn:micasaverde-com:serviceId:Color1', 'CurrentColor');
        }
        if (current != null) {
          parts = current.split(",");
          current = rgbToHex(parseInt(parts[2].substring(2)), parseInt(parts[3].substring(2)), parseInt(parts[4].substring(2)));
        } else {
          current = "#ffffff";
        }
        html += "<div class='altui-colorpicker pull-right'>\n    <input id='altui-colorpicker-" + device.altuiid + "' value='" + current + "'>\n    </input>\n</div>";
      }
      html += "<div id='slider-" + device.altuiid + "' class='altui-dimmable-slider'></div>";
      $('#altui-colorpicker-#{device.altuiid}').spectrum('destroy');
      html += "<script type='text/javascript'>\n    $('#altui-colorpicker-" + device.altuiid + "').spectrum({\n        color: '" + current + "',\n        preferredFormat: 'hex',\n        replacerClassName: 'altui-colorpicker-replacer',\n        show: function(color) {\n            $(this).closest('.altui-device').toggleClass('altui-norefresh');\n        },\n        hide: function(color) { \n            $(this).closest('.altui-device').toggleClass('altui-norefresh');\n        }\n    });\n    $('div#altui-onoffbtn-" + device.altuiid + "').on('click touchend', function() { \n        ALTUI_PluginDisplays.toggleOnOffButton('" + device.altuiid + "',\n                                               'div#altui-onoffbtn-" + device.altuiid + "'); \n    });\n    $('div#slider-" + device.altuiid + ".altui-dimmable-slider').slider({ \n        max:100,min:0,value:" + level + ",change:ALTUI_PluginDisplays.onSliderChange \n    });";
      if (colorpicker) {
        html += "$('div#slider-" + device.altuiid + ".altui-dimmable-slider').css('margin-right','120px');\n$('input#altui-colorpicker-" + device.altuiid + "').on('change', \n    function(e,color) {  \n        ALTUI_PluginDisplays.onColorPicker(e,'" + device.altuiid + "',color); });\n    }";
      }
      html += "</script>";
      $(".altui-mainpanel").off("slide", "#slider-" + device.altuiid).on("slide", "#slider-" + device.altuiid, function(event, ui) {
        return $("#slider-val-" + device.altuiid).text(ui.value + '%');
      });
      return html;
    };

    ALTUI_PluginDisplays._drawDimmableRGB = function(device) {
      return this._drawDimmable(device, true);
    };

    ALTUI_PluginDisplays._drawDoorLock = function(device) {
      var html, lasttrip, status;
      status = MultiBox.getStatus(device, 'urn:micasaverde-com:serviceId:DoorLock1', 'Status');
      html = "";
      html += ALTUI_PluginDisplays.createOnOffButton(status, "altui-onoffbtn-" + device.altuiid, _T("Unlock,Lock"), "pull-right");
      lasttrip = MultiBox.getStatus(device, 'urn:micasaverde-com:serviceId:SecuritySensor1', 'LastTrip');
      if (lasttrip != null) {
        html += "<div class='altui-lasttrip-text text-muted'>\n    " + timeGlyph + " " + (this._toIso(new Date(lasttrip * 1000), ' ')) + "\n</div>";
      }
      html += "<script type='text/javascript'>\n    $('div#altui-onoffbtn-" + device.altuiid + "').on('click touchend', function() { \n        ALTUI_PluginDisplays.toggleDoorLock('" + device.altuiid + "',\n                                            'div#altui-onoffbtn-" + device.altuiid + "'); \n    });\n</script>";
      return html;
    };

    ALTUI_PluginDisplays.drawPLEG = function(device) {};

    ALTUI_PluginDisplays.drawDoorSensor = function(device) {
      return this._drawMotion(device);
    };

    ALTUI_PluginDisplays.drawSmoke = function(device) {
      return this._drawMotion(device);
    };

    ALTUI_PluginDisplays.drawFlood = function(device) {
      return this._drawMotion(device);
    };

    ALTUI_PluginDisplays.drawGCal = function(device) {
      return this._drawMotion(device);
    };

    ALTUI_PluginDisplays.drawCombinationSwitch = function(device) {
      var S_COMBO, html, label;
      S_COMBO = 'urn:futzle-com:serviceId:CombinationSwitch1';
      label = MultiBox.getStatus(device, S_COMBO, 'Label');
      html = "<button \n id='altui-pokebtn-" + device.altuiid + "' \n type='button' \n class='pull-right altui-window-btn btn btn-default btn-sm '>\n    " + (_T("Poke")) + "\n</button>";
      if (label != null) {
        html += "<div class='altui-combsw-text text-muted'><br>Watched Items: " + label + "</div>";
      }
      html += "<script type='text/javascript'>\n    $('button#altui-pokebtn-" + device.altuiid + "')\n        .on('click', function() { \n            MultiBox.runActionByAltuiID('" + device.altuiid + "', \n                                        '" + S_COMBO + "', \n                                        'Trigger', \n                                        {}); \n        });\n</script>\";";
      return html;
    };

    ALTUI_PluginDisplays.drawDayTime = function(device) {
      var S_DAYTIME, html, status;
      S_DAYTIME = 'urn:rts-services-com:serviceId:DayTime';
      status = parseInt(MultiBox.getStatus(device, S_DAYTIME, 'Status'));
      html = "";
      html += this.createOnOffButton(status, "altui-onoffbtn-" + device.altuiid, _T("Night,Day"), "pull-right");
      html += "\"\n<script type='text/javascript'>\n    $('div#altui-onoffbtn-" + device.altuiid + "').on('click touchend', function() { \n            ALTUI_PluginDisplays.toggleDayTimeButton(\n                    '" + device.altuiid + "',\n                    'div#altui-onoffbtn-" + device.altuiid + "'); \n    });\n</script>";
      return html;
    };

    ALTUI_PluginDisplays.drawSonos = function(device) {
      var S_AVT, S_MNAV, playbtn, playbtnstyle, playstatus, playtitle, status, stopbtn, stopbtnstyle, title;
      S_AVT = 'urn:upnp-org:serviceId:AVTransport';
      S_MNAV = 'urn:micasaverde-com:serviceId:MediaNavigation1';
      status = MultiBox.getStatus(device, S_AVT, 'TransportState');
      title = MultiBox.getStatus(device, S_AVT, 'CurrentTitle');
      playstatus = "";
      playtitle = "";
      playbtn = "Play";
      stopbtn = "Stop";
      playbtnstyle = "";
      stopbtnstyle = "";
      if (title != null) {
        switch (status) {
          case "PLAYING":
            playstatus = "Playing...";
            playtitle = title;
            playbtn = "Pause";
            break;
          case "PAUSED_PLAYBACK":
            playstatus = "<br>Paused...<br>Press Play to continue";
            break;
          case "STOPPED":
            playstatus = "<br>Stopped";
            break;
          default:
            playstatus = "";
        }
      }
      html += "<button \n id='altui-Stopbtn-" + device.altuiid + "' \n type='button' \n class='pull-right altui-window-btn btn btn-default btn-sm " + stopbtnstyle + "'>\n    " + (_T(stopbtn)) + "\n</button>\n<button \n id='altui-" + (_T(playbtn)) + "btn-" + device.altuiid + "' \n type='button' \n class='pull-right altui-window-btn btn btn-default btn-sm " + playbtnstyle + "'>\n    " + (_T(playbtn)) + "\n</button>";
      if (title != null) {
        html += "<div class='altui-sonos-text text-muted' style='height: 48px; overflow: hidden'>\n    " + playstatus + "\n    <br>" + playtitle + "\n</div>";
      }
      return html += "<script type='text/javascript'>\n    $('button#altui-Playbtn-" + device.altuiid + "')\n        .on('click', function() {\n            MultiBox.runActionByAltuiID('" + device.altuiid + "', \n                '" + S_MNAV + "', \n                'Play', \n                {}); \n        } );\n    $('button#altui-Pausebtn-" + device.altuiid + "')\n        .on('click', function() {\n            MultiBox.runActionByAltuiID('" + device.altuiid + "', \n                '" + S_MNAV + "', \n                'Pause',\n                 {});\n            });\n    $('button#altui-Stopbtn-" + device.altuiid + "')\n        .on('click', function() {\n            MultiBox.runActionByAltuiID('" + device.altuiid + "', \n                '" + S_MNAV + "', \n                'Stop', \n                {}); \n        });\n</script>";
    };

    ALTUI_PluginDisplays.drawSysMonitor = function(device) {
      var S_MONITOR, cpuload, memoryavail;
      S_MONITOR = 'urn:cd-jackson-com:serviceId:SystemMonitor';
      memoryavail = MultiBox.getStatus(device, S_MONITOR, 'memoryAvailable');
      cpuload = MultiBox.getStatus(device, S_MONITOR, 'cpuLoad5');
      if ((memoryavail != null) && (cpuload != null)) {
        return "<div class='altui-sysmon-text text-muted'>\n    <br>Memory Available: " + memoryavail + "\n    <br>CPU Load (5 minute): " + cpuload + "\n</div>";
      } else {
        return "";
      }
    };

    ALTUI_PluginDisplays.drawVeraAlerts = function(device) {
      var S_ALERT, lastmsgsent, lastrecipient;
      S_ALERT = 'urn:richardgreen:serviceId:VeraAlert1';
      lastmsgsent = MultiBox.getStatus(device, S_ALERT, 'LastMsgSent');
      lastrecipient = MultiBox.getStatus(device, S_ALERT, 'LastRecipient');
      if ((lastmsgsent != null) && (lastrecipient != null)) {
        return "<div class='altui-sysmon-text text-muted' style='padding-left: 52px'>\n    <br>Last Msg Sent: " + lastmsgsent + "\n    <br>Profile Used: " + lastrecipient + "\n</div>";
      } else {
        return "";
      }
    };

    ALTUI_PluginDisplays.drawMultiString = function(device) {
      var MLS_SETTING, S_VCONT, sAll, sLess, sMore;
      sAll = _T("All");
      sMore = _T("More");
      sLess = _T("Less");
      MLS_SETTING = "MULTISTRINGUISTATE" + device.altuiid;
      return S_VCONT = 'urn:upnp-org:serviceId:VContainer1';
    };

    if ($("button#altui-morebtn-" + device.altuiid).html() == null) {
      MyLocalStorage.setSettings(MLS_SETTING, {
        devicestate: 0
      });
    }

    state = MyLocalStorage.getSettings(MLS_SETTING);

    display = state != null ? state['devicestate'] : 0;

    html = "";

    html += "<div class='btn-group pull-right'>\n   <button \n    id='altui-allbtn-" + device.altuiid + "' \n    type='button' \n    class='altui-window-btn btn btn-default btn-xs'>\n       " + sAll + "\n   </button>\n   <button \n    id='altui-morebtn-" + device.altuiid + "' \n    type='button' \n    class='altui-window-btn btn btn-default btn-xs'>\n       " + (display !== 2 ? sMore : sLess) + "\n   </button>\n</div>\n<div class='altui-multistring-text-div'>";

    for (v = j = 1; j <= 5; v = ++j) {
      label = MultiBox.getStatus(device, S_VCONT, "VariableName" + v);
      value = MultiBox.getStatus(device, S_VCONT, "Variable" + v);
      style = "";
      if (display !== 2) {
        textCls = 'altui-multistring-text-some';
      } else {
        textCls = 'altui-multistring-text-all';
      }
      if (v <= 3) {
        style = "class='" + textCls + " altui-multistring-text-1 text-muted'";
      } else {
        style = "class='" + textCls + " altui-multstring-text-2 text-muted'";
        if (display !== 2) {
          style += " style='display: none;'";
        }
      }
      if ((label != null) && (value != null)) {
        html += $("<div " + style + "></div>").text(label + ":" + value).wrap("<div></div>").parent().html();
      }
      html += "</div>\n<script type='text/javascript'>\n    state = MyLocalStorage.getSettings('" + MLS_SETTING + "');\n    if (state['devicestate'] == 1) { \n        $('.altui-multistring-text-1').toggle(); \n        $('.altui-multistring-text-2').toggle(); \n    }\n    $('button#altui-allbtn-" + device.altuiid + "').on('click', function() { \n        $('.altui-multistring-text-some')\n            .removeClass('altui-multistring-text-some')\n            .addClass('altui-multistring-text-all')\n            .show();\n        $('#altui-morebtn-" + device.altuiid + "').html('" + sLess + "'); \n        state['devicestate'] = 2; \n        MyLocalStorage.setSettings('" + MLS_SETTING + "', state); \n    });\n    $('button#altui-morebtn-" + device.altuiid + "')\n        .on('click', function() { \n            if ($(this).html() == '" + sLess + "') { \n                $('.altui-multistring-text-all')\n                    .removeClass('altui-multistring-text-all')\n                    .addClass('altui-multistring-text-some'); \n                $('.altui-multistring-text-2').hide(); \n                $('#altui-morebtn-" + device.altuiid + "').html('" + sMore + "'); \n                state['devicestate'] = 0; \n                MyLocalStorage.setSettings('MULTISTRINGUISTATE" + device.altuiid + "', state); \n            } else { \n                $('.altui-multistring-text-1').toggle(); \n                $('.altui-multistring-text-2').toggle(); \n                state['devicestate'] = state['devicestate'] == 0 ? 1 : 0; \n                MyLocalStorage.setSettings('" + MLS_SETTING + "', state); \n            } });\n</script>";
    }

    ALTUI_PluginDisplays.drawPnPProxy = function(device) {
      var status;
      status = MultiBox.getStatus(device, 'urn:futzle-com:serviceId:UPnPProxy1', 'StatusText');
      if (status != null) {
        return "<div class='altui-upnpproxy-text text-muted'>Status: " + status + "</div>";
      } else {
        return "";
      }
    };

    ALTUI_PluginDisplays.drawProgLogicTimerSwitch = function(device) {
      var S_PLTS, armed, h, hms, m, onoff, rtime, s;
      S_PLTS = 'urn:rts-services-com:serviceId:ProgramLogicTS';
      html = "";
      onoff = MultiBox.getStatus(device, S_PLTS, 'Status');
      armed = MultiBox.getStatus(device, S_PLTS, 'Armed');
      state = MultiBox.getStatus(device, S_PLTS, 'State');
      rtime = MultiBox.getStatus(device, S_PLTS, 'TimeRemaining');
      html += "<div class='pull-right altui-plts-btn-div'>\";\n <div class='btn-group'>\";\n  <button id='altui-armbtn-" + device.altuiid + "' type='button' class='altui-plts-btn btn btn-default btn-xs {2}'>" + playbtnstyle + "</button>\".format(device.altuiid, _T(\"Arm\"), armed==1?'btn-info':'');\n  <button id='altui-bypassbtn-" + device.altuiid + "' type='button' class='altui-plts-btn btn btn-default btn-xs {2}'>" + playbtnstyle + "</button>\".format(device.altuiid, _T(\"Bypass\"), armed==0?'btn-info':'');\n  <button id='altui-triggerbtn-" + device.altuiid + "' type='button' class='altui-plts-btn btn btn-default btn-xs'>" + playbtnstyle + "</button>\".format(device.altuiid, _T(\"Trigger\"));\n  <button id='altui-restartbtn-" + device.altuiid + "' type='button' class='altui-plts-btn btn btn-default btn-xs'>" + playbtnstyle + "</button>\".format(device.altuiid, _T(\"Restart\"));\n </div><br>\n <div class='btn-group'>\n  <button id='altui-onbtn-" + device.altuiid + "' type='button' class='altui-plts-btn btn btn-default btn-xs {2}'>" + playbtnstyle + "</button>\".format(device.altuiid, _T(\"On\"), onoff==1?'btn-info':'');\n  <button id='altui-offbtn-" + device.altuiid + "' type='button' class='altui-plts-btn btn btn-default btn-xs {2}'>" + playbtnstyle + "</button>\".format(device.altuiid, _T(\"Off\"), onoff==0?'btn-info':'');\n  <button id='altui-resetbtn-" + device.altuiid + "' type='button' class='altui-plts-btn btn btn-default btn-xs {2}'>" + playbtnstyle + "</button>\".format(device.altuiid, _T(\"Reset\"), state==0?'btn-info':'');";
      if (state === 3 && (rtime != null)) {
        h = '00';
        m = '00';
        s = '00';
        hms = rtime.split(':');
        if (hms.length === 3) {
          h = hms[0];
          m = hms[1];
          s = hms[2];
        } else if (hms.length === 2) {
          m = hms[0];
          s = hms[1];
        } else {
          s = hms[0];
        }
        html += "<div id='altui-plts-rtime' class='altui-plts-time-text-div text-muted'>\n    " + h + ":" + m + ":" + s + "\n</div>";
      }
      html += "</div>\";\n</div>\";\n<script type='text/javascript'>\";\nfunction resizepltbtn() { var w = $('div.altui-device-body').width(); w=w<250?(w-50)/4:50; $('button.altui-plts-btn').css('width', w); $('#altui-plts-rtime').css('width', w-8).css('overflow', 'hidden'); }; resizepltbtn();\";\n$(window).resize(function(){ resizepltbtn(); });\"\n$('button#altui-restartbtn-" + device.altuiid + "').on('click', function() { var device = MultiBox.getDeviceByAltuiID('" + device.altuiid + "'); var state = MultiBox.getStatus(device, 'urn:rts-services-com:serviceId:ProgramLogicTS', 'State'); if (state==3) { MultiBox.runActionByAltuiID('" + device.altuiid + "','urn:rts-services-com:serviceId:ProgramLogicTS','SetState',{'newStateValue':'2'}); $('button#altui-restartbtn-" + device.altuiid + "').addClass('btn-info'); } });\".format(device.altuiid);\n$('button#altui-triggerbtn-" + device.altuiid + "').on('click', function() { MultiBox.runActionByAltuiID('" + device.altuiid + "','urn:rts-services-com:serviceId:ProgramLogicTS','SetState',{'newStateValue':'1'}); $('button#altui-triggerbtn-" + device.altuiid + "').addClass('btn-info'); });\".format(device.altuiid);\n$('button#altui-bypassbtn-" + device.altuiid + "').on('click', function() { MultiBox.runActionByAltuiID('" + device.altuiid + "','urn:rts-services-com:serviceId:ProgramLogicTS','SetArmed',{'newArmedValue':'0'}); $('button#altui-bypassbtn-" + device.altuiid + "').addClass('btn-info'); $('button#altui-armbtn-" + device.altuiid + "').removeClass('btn-info'); });\".format(device.altuiid);\n$('button#altui-armbtn-" + device.altuiid + "').on('click', function() { MultiBox.runActionByAltuiID('" + device.altuiid + "','urn:rts-services-com:serviceId:ProgramLogicTS','SetArmed',{'newArmedValue':'1'}); $('button#altui-armbtn-" + device.altuiid + "').addClass('btn-info'); $('button#altui-bypassbtn-" + device.altuiid + "').removeClass('btn-info'); });\".format(device.altuiid);\n$('button#altui-resetbtn-" + device.altuiid + "').on('click', function() { MultiBox.runActionByAltuiID('" + device.altuiid + "','urn:rts-services-com:serviceId:ProgramLogicTS','SetState',{'newStateValue':'0'}); $('button#altui-resetbtn-" + device.altuiid + "').addClass('btn-info'); });\".format(device.altuiid);\n$('button#altui-offbtn-" + device.altuiid + "').on('click', function() { MultiBox.runActionByAltuiID('" + device.altuiid + "','urn:rts-services-com:serviceId:ProgramLogicTS','SetTarget',{'newTargetValue':'0'}); $('button#altui-offbtn-" + device.altuiid + "').addClass('btn-info'); $('button#altui-onbtn-" + device.altuiid + "').removeClass('btn-info'); });\".format(device.altuiid);\n$('button#altui-onbtn-" + device.altuiid + "').on('click', function() { MultiBox.runActionByAltuiID('" + device.altuiid + "','urn:rts-services-com:serviceId:ProgramLogicTS','SetTarget',{'newTargetValue':'1'}); $('button#altui-onbtn-" + device.altuiid + "').addClass('btn-info'); $('button#altui-offbtn-" + device.altuiid + "').removeClass('btn-info'); });\".format(device.altuiid);\n</script>";
      return html;
    };

    ALTUI_PluginDisplays.drawMySensors = function(device) {
      var S_ARD, activeFlag, including;
      S_ARD = 'urn:upnp-arduino-cc:serviceId:arduino1';
      including = MultiBox.getStatus(device, S_ARD, 'InclusionMode');
      activeFlag = including ? 'active' : '';
      return "<div class='text-muted'>\n   Press Start to include\n   <div class='pull-right'>\n       <button \n        id='altui-arduino-include-start-" + device.altuiid + "' \n        type='button' \n        class='altui-window-btn btn btn-default btn-sm " + activeFlag + "'>\n           " + (_T("Start")) + "\n       </button>\n       <button \n        id='altui-arduino-include-stop-" + device.altuiid + "'\n        type='button' \n        class='altui-window-btn btn btn-default btn-sm " + activeFlag + "'>\n           " + (_T("Stop")) + "\n       </button>\n   </div>\n</div>\n<script type='text/javascript'>\n   $('button#altui-arduino-include-start-" + device.altuiid + "').on('click', function() { \n       MultiBox.runActionByAltuiID('" + device.altuiid + "', \n                                   '" + S_ARD + "', \n                                   'StartInclusion', \n                                   {});\n   });\n   $('button#altui-arduino-include-stop-" + device.altuiid + "').on ('click', function() { \n       MultiBox.runActionByAltuiID('" + device.altuiid + "', \n                                   '" + S_ARD + "', \n                                   'StopInclusion',\n                                   {}); \n   });\n</script>";
    };

    ALTUI_PluginDisplays.drawTempLeak = function(device) {
      var S_SEC, armed, lasttrip, lasttripdate;
      S_SEC = 'urn:micasaverde-com:serviceId:SecuritySensor1';
      armed = parseInt(MultiBox.getStatus(device, S_SEC, 'Armed'));
      lasttrip = MultiBox.getStatus(device, S_SEC, 'LastTrip');
      html = "";
      html += this.createOnOffButton(armed, "altui-onoffbtn-" + device.altuiid, _T("Bypass,Arm"), "pull-right");
      if (lasttrip != null) {
        lasttripdate = this._toIso(new Date(lasttrip * 1000), ' ');
        html += "<div class='altui-lasttrip-text text-muted'>\n    " + timeGlyph + " " + lasttripdate + "\n</div>";
      }
      html += "<script type='text/javascript'>\";\n    $('div#altui-onoffbtn-" + device.altuiid + "').on('click touchend', function() {\n        ALTUI_PluginDisplays.toggleArmed('" + device.altuiid + "',\n                                         'div#altui-onoffbtn-" + device.altuiid + "'); \n    });\n</script>\";\n";
      return html;
    };

    ALTUI_PluginDisplays.drawMotion = function(device) {
      var S_SEC, armed, lasttrip, lasttripdate, tripped;
      S_SEC = 'urn:micasaverde-com:serviceId:SecuritySensor1';
      armed = parseInt(MultiBox.getStatus(device, S_SEC, 'Armed'));
      lasttrip = MultiBox.getStatus(device, S_SEC, 'LastTrip');
      tripped = parseInt(MultiBox.getStatus(device, S_SEC, 'Tripped'));
      html = "";
      html += this.createOnOffButton(armed, "altui-onoffbtn-" + device.altuiid, _T("Bypass,Arm"), "pull-right");
      if (lasttrip != null) {
        lasttripdate = this._toIso(new Date(lasttrip * 1000), ' ');
        html += "<div class='altui-lasttrip-text text-muted'>\n    " + timeGlyph + " " + lasttripdate + "\n</div>";
      }
      html += "<span class='altui-motion' ></span>";
      if (tripped) {
        html += "<span class='glyphicon glyphicon-flash text-danger' aria-hidden='true'>\n</span>";
      }
      html += "<script type='text/javascript'>\";\n    $('div#altui-onoffbtn-" + device.altuiid + "').on('click touchend', function() {\n        ALTUI_PluginDisplays.toggleArmed('" + device.altuiid + "',\n                                         'div#altui-onoffbtn-" + device.altuiid + "'); \n    });\n</script>\";\n";
      return html;
    };

    ALTUI_PluginDisplays.drawKeypad = function(device) {
      var D_KEYPAD, m, re, sl_PinFailed, sl_UserCode, status;
      D_KEYPAD = 'urn:schemas-micasaverde-com:device:Keypad:1';
      status = parseInt(MultiBox.getStatus(device, D_KEYPAD, 'Status'));
      sl_UserCode = MultiBox.getStatus(device, D_KEYPAD, 'sl_UserCode');
      sl_PinFailed = MultiBox.getStatus(device, D_KEYPAD, 'sl_PinFailed');
      html = "";
      html += this.createOnOffButton(status, "altui-onoffbtn-" + device.altuiid, _T("Unlock,Lock"), "pull-right");
      if (sl_PinFailed) {
        html += "<div class='text-danger'>\n    <span class='glyphicon glyphicon-warning-sign' aria-hidden='true'>\n    </span> \n    Invalid PIN Entered\n</div>";
      }
      if (sl_UserCode != null) {
        re = /UserName="(.*)"/;
        if ((m = re.exec(sl_UserCode)) != null) {
          if (m.index === re.lastIndex) {
            re.lastIndex++;
          }
        }
        html += "<div class='altui-keypad-status'>User " + m[1] + " Entered</div>";
      }
      html += "<script type='text/javascript'>\n    $('div#altui-onoffbtn-" + device.altuiid + "').on('click touchend', function() { \n        ALTUI_PluginDisplays.toggleKeypad('" + device.altuiid + "',\n                                          'div#altui-onoffbtn-" + device.altuiid + "'); \n    });\n</script>";
      return html;
    };

    ALTUI_PluginDisplays.drawKeypadControlPanel = function(device) {
      $(domparent).append("<div class=''>\n    <span class='text-warn'>this panel is <mark>not functional</mark>, it requires a brave developper to finish it to manage pin codes etc using device UPNP actions</span>\n    <table id='altui-cplus-keytbl'>\n        <tbody>\n            <tr>\n                <td>\n                    <button class='altui-cplus-button btn btn-default' id='1'>1</button>\n                </td>\n                <td>\n                    <button class='altui-cplus-button btn btn-default' id='2'>2</button>\n                </td>\n                <td>\n                    <button class='altui-cplus-button btn btn-default' id='3'>3</button>\n                </td>\n            </tr>\";\n            <tr>\n                <td>\n                    <button class='altui-cplus-button btn btn-default' id='4'>4</button>\n                </td>\n                <td>\n                    <button class='altui-cplus-button btn btn-default' id='5'>5</button>\n                </td>\n                <td>\n                    <button class='altui-cplus-button btn btn-default' id='6'>6</button>\n                </td>\n            </tr>\n            <tr>\n                <td>\n                    <button class='altui-cplus-button btn btn-default' id='7'>7</button>\n                </td>\n                <td>\n                    <button class='altui-cplus-button btn btn-default' id='8'>8</button>\n                </td>\n                <td>\n                    <button class='altui-cplus-button btn btn-default' id='9'>9</button>\n                </td>\n            </tr>\n            <tr>\n                <td colspan='3'>\n                    <button class='altui-cplus-button btn btn-default' id='0'>0</button>\n                </td>\n            </tr>\n        </tbody>\n    </table>\n</div>");
      return $(".altui-cplus-button").click(function() {
        var id;
        return id = $(this).prop('id');
      });
    };

    ALTUI_PluginDisplays.drawBinaryLight = function(device) {
      var status;
      html = "";
      html += UIManager.defaultDeviceDrawWatts(device);
      status = parseInt(MultiBox.getStatus(device, 'urn:upnp-org:serviceId:SwitchPower1', 'Status'));
      if (this.isBusyStatus(device)) {
        status = -1;
      }
      html += this._createOnOffButton(status, "altui-onoffbtn-" + device.altuiid, _T("OFF", "ON"), "pull-right");
      html += "<script type='text/javascript'>\n   $('div#altui-onoffbtn-" + device.altuiid + "').on('click touchend', function() { \n       ALTUI_PluginDisplays.toggleOnOffButton('" + device.altuiid + "',\n                                               'div#altui-onoffbtn-" + device.altuiid + "'); \n       });\n</script>";
      return html;
    };

    ALTUI_PluginDisplays.drawPowerMeter = function(device) {
      var volts, watts;
      watts = parseFloat(MultiBox.getStatus(device, 'urn:micasaverde-com:serviceId:EnergyMetering1', 'Watts'));
      volts = parseFloat(MultiBox.getStatus(device, 'urn:brultech-com:serviceId:PowerMeter1', 'Volts'));
      html = "";
      if (!isNaN(watts)) {
        html += "<div class='altui-watts '>\n    " + watts + " <small>Watts</small>\n</div>";
      }
      if (!isNaN(volts)) {
        html += "<div class='altui-volts '>\n    " + volts + " <small>Volts</small>\n</div>";
      }
      return html;
    };

    ALTUI_PluginDisplays.drawCountDown = function(device) {
      var duration, remaining;
      remaining = parseInt(MultiBox.getStatus(device, 'urn:futzle-com:serviceId:CountdownTimer1', 'Remaining'));
      duration = parseInt(MultiBox.getStatus(device, 'urn:futzle-com:serviceId:CountdownTimer1', 'Duration'));
      return "<div class='altui-countdown'>\n    " + remaining + " / " + duration + "\n</div>";
    };

    ALTUI_PluginDisplays.drawVacation = function(device) {
      var expiryDate, status;
      status = parseInt(MultiBox.getStatus(device, 'urn:upnp-org:serviceId:SwitchPower1', 'Status'));
      expiryDate = MultiBox.getStatus(device, 'urn:futzle-com:serviceId:HolidayVirtualSwitch1', 'OverrideExpiryDate');
      return "<div class='altui-watts '>\n    " + (status === 1 ? _T("HOLIDAY") : _T("WORKING")) + "\n</div>\n<div class=''>\n    " + expiryDate + "\n</div>";
    };

    ALTUI_PluginDisplays.drawWeather = function(device) {
      var S_WEATHER, condition, wind;
      S_WEATHER = 'urn:upnp-micasaverde-com:serviceId:Weather1';
      condition = MultiBox.getStatus(device, S_WEATHER, 'Condition');
      wind = MultiBox.getStatus(device, S_WEATHER, 'WindCondition');
      return "<div class='altui-weather-text'>" + condition + "</div>\n<div class='altui-weather-text'>" + (_T("Wind")) + ": " + wind + "</div>";
    };

    ALTUI_PluginDisplays.drawWeatherIcon = function(device) {
      var S_WEATHER, conditionGroup, newsrc;
      S_WEATHER = 'urn:upnp-micasaverde-com:serviceId:Weather1';
      conditionGroup = MultiBox.getStatus(device, S_WEATHER, 'ConditionGroup');
      if (conditionGroup != null) {
        newsrc = "http://icons.wxug.com/i/c/i/" + conditionGroup + ".gif";
      } else {
        newsrc = defaultIconSrc;
      }
      return "<img \n class='altui-device-icon pull-left img-rounded' \n src='" + newsrc + "' \n alt='" + conditionGroup + "' \n onerror='UIManager.onDeviceIconError(\"" + device.altuiid + "\")'>\n</img>";
    };

    ALTUI_PluginDisplays.drawDataMine = function(device) {
      var controller, hostname, ipaddr, isUI5, main_url, url, url_parts;
      if (MultiBox.isRemoteAccess()) {
        controller = MultiBox.controllerOf(device.altuuiid).controller;
        isUI5 = MultiBox.isUI5(controller);
        if (!isUI5) {
          main_url = window.location.href;
          url_parts = main_url.split("?");
          url = url_parts[0] + "?id=lr_dmPage";
        } else {
          url = "https://" + hostname + "/port_3480/data_request?id=lr_dmPage";
        }
      } else {
        ipaddr = MultiBox.getIpAddr(device.altuiid);
        hostname = ipaddr === '' ? window.location.hostname : ipaddr;
        url = "http://" + hostname + "/dm/index.html";
      }
      return "<button \n id='altui-datamine-" + device.altuiid + "' \n type='button' \n class='pull-right altui-datamine-open btn btn-default btn-sm '>\n    " + (_T("Open")) + "\n</button>\n<script type='text/javascript'>\n    $('button#altui-datamine-" + device.altuiid + ".altui-datamine-open')\n        .on('click', function() { \n            window.open('" + url + "','_blank'); \n        });\n</script>";
    };

    ALTUI_PluginDisplays.drawMultiswitch = function(device) {
      var btnid, col, k, l, line, name, names, status;
      btnid = 0;
      names = JSON.parse(MultiBox.getStatus(device, "urn:dcineco-com:serviceId:MSwitch1", "BtnNames") || "[]");
      html = "";
      html += "<div class='altui-multiswitch-container pull-right'>";
      for (line = k = 0; k <= 1; line = ++k) {
        html += "<div class='row'>";
        for (col = l = 0; l <= 3; col = ++l) {
          name = names[btnid] ? names[btnid] : "Btn_" + btnid;
          status = parseInt(MultiBox.getStatus(device, "urn:dcineco-com:serviceId:MSwitch1", "Status" + (btnid + 1)));
          html += "<div class='col-xs-3'>\n    <button \n     id='" + btnid + "' \n     type='button' \n     class='altui-multiswitch-open btn btn-default btn-xs " + (status ? 'btn-info' : '') + "' >\n        " + name + "\n    </button>\n</div>";
          btnid++;
        }
        html += "</div>";
      }
      html += "</div>\n<script type='text/javascript'>\n     $('button.altui-multiswitch-open').on('click', function() {\n       var btnid = parseInt($(this).prop('id'))+1;\n       var action = 'SetStatus'+btnid;\n       var params = {}; params['newStatus'+btnid]=-1;\n       MultiBox.runActionByAltuiID('" + device.altuiid + "', \n                                   'urn:dcineco-com:serviceId:MSwitch1', \n                                   action, \n                                   params);\n    });\n</script>";
      return html;
    };

    ALTUI_PluginDisplays.drawInfoViewer = function(device) {
      var pattern, urlhead;
      pattern = MultiBox.getStatus(device, 'urn:a-lurker-com:serviceId:InfoViewer1', 'LuaPattern');
      urlhead = MultiBox.getUrlHead(device.altuiid);
      html = "";
      html += "<div class='btn-group pull-right'>\n    <button \n     id='altui-infoviewer-" + device.altuiid + "' \n     type='button' \n     class='altui-infoviewer-btn btn btn-default btn-sm pull-right'>\n       " + (_T("Open")) + "\n   </button>\n   <button \n    id='altui-infoviewer-log-" + device.altuiid + "' \n    type='button' \n    class='altui-infoviewer-log-btn btn btn-default btn-sm pull-right'>\n       " + (_T("Logs")) + "\n   </button>\n</div>";
      if (pattern !== "") {
        html += "<div class='altui-infoviewer-pattern'>Pattern:</div>\n<div class='altui-infoviewer-pattern'>" + (pattern.htmlEncode()) + "</div>";
      }
      html += "<script type='text/javascript'>\n    $('button.altui-infoviewer-btn').on('click', function() { \n        window.open('" + urlhead + "?id=lr_al_info','_blank'); \n    });\n    $('button.altui-infoviewer-log-btn').on('click', function() { \n        window.open('" + urlhead + "?id=lr_al_info&fnc=getLog&app=localapp','_blank'); \n    });\n</script>";
      return html;
    };

    ALTUI_PluginDisplays.drawBinLightControlPanel = function(device, domparent) {
      return $(domparent).append("Any thing can go here<hr>\n<div class='btn-group btn-group-lg' role='group' aria-label='...'>\n  <button type='button' class='btn btn-default'>Left</button>\n  <button type='button' class='btn btn-default'>Middle</button>\n  <button type='button' class='btn btn-default'>Right</button>\n</div>");
    };

    ALTUI_PluginDisplays.toggleOnOffButton = function(altuiid, htmlid) {
      return this._toggleButton(altuiid, htmlid, 'urn:upnp-org:serviceId:SwitchPower1', 'Status', function(id, newval) {
        return MultiBox.setOnOff(altuiid, newval);
      });
    };

    ALTUI_PluginDisplays.toggleKeypad = function(altuiid, htmlid) {
      ALTUI_PluginDisplays.toggleButton(altuiid, htmlid, 'urn:micasaverde-com:serviceId:DoorLock1', 'Status', function(id, newval) {});
      return MultiBox.runActionByAltuiID(altuiid, 'urn:micasaverde-com:serviceId:DoorLock1', 'SetTarget', {
        newTargetValue: newval
      });
    };

    ALTUI_PluginDisplays.toggleArmed = function(altuiid, htmlid) {
      return this._toggleButton(altuiid, htmlid, 'urn:micasaverde-com:serviceId:SecuritySensor1', 'Armed', function(id, newval) {
        return MultiBox.setArm(altuiid, newval);
      });
    };

    ALTUI_PluginDisplays.toggleDoorLock = function(altuiid, htmlid) {
      return this._toggleButton(altuiid, htmlid, 'urn:micasaverde-com:serviceId:DoorLock1', 'Status', function(id, newval) {
        return MultiBox.setDoorLock(altuiid, newval);
      });
    };

    ALTUI_PluginDisplays.togglePLEG = function(altuiid, htmlid) {
      return this._toggleButton(altuiid, htmlid, 'urn:rts-services-com:serviceId:ProgramLogicEG', 'Armed', function(id, newval) {
        return MultiBox.runActionByAltuiID(altuiid, 'urn:rts-services-com:serviceId:ProgramLogicEG', 'SetArmed', {
          'newArmedValue': newval
        });
      });
    };

    ALTUI_PluginDisplays.toggleVswitch = function(altuiid, htmlid) {
      return ALTUI_PluginDisplays.toggleButton(altuiid, htmlid, 'urn:upnp-org:serviceId:VSwitch1', 'Status', function(id, newval) {
        return MultiBox.runActionByAltuiID(altuiid, 'urn:upnp-org:serviceId:VSwitch1', 'SetTarget', {
          newTargetValue: newval
        });
      });
    };

    ALTUI_PluginDisplays.toggleDayTimeButton = function(altuiid, htmlid) {
      return ALTUI_PluginDisplays.toggleButton(altuiid, htmlid, 'urn:rts-services-com:serviceId:DayTime', 'Status', function(id, newval) {
        return MultiBox.runActionByAltuiID(altuiid, 'urn:rts-services-com:serviceId:DayTime', 'SetTarget', {
          newTargetValue: newval
        });
      });
    };

    return ALTUI_PluginDisplays;

  })();

}).call(this);
