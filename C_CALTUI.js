// Generated by CoffeeScript 1.10.0
(function() {
  var altui_Donate, altui_Settings, altui_Svs, buildUPnpActionUrl, buildVariableSetUrl, buildVeraURL, findDeviceIP, findDeviceIdx, findRootDevice, findRootDeviceIdx, ip_address, saveVar;

  altui_Svs = 'urn:upnp-org:serviceId:caltui1';

  ip_address = data_request_url;

  findDeviceIdx = function(deviceID) {
    var dev, i, j, len, ref;
    ref = jsonp.ud.devices;
    for (i = j = 0, len = ref.length; j < len; i = ++j) {
      dev = ref[i];
      if (dev.id === deviceID) {
        return i;
      }
    }
    return null;
  };

  findRootDeviceIdx = function(deviceID) {
    var idx;
    idx = findDeviceIdx(deviceID);
    while (jsonp.ud.devices[idx].id_parent !== 0) {
      idx = findDeviceIdx(jsonp.ud.devices[idx].id_parent);
    }
    return idx;
  };

  findRootDevice = function(deviceID) {
    return jsonp.ud.devices[findRootDeviceIdx(deviceID)].id;
  };

  findDeviceIP = function(deviceID) {
    return jsonp.ud.devices[findRootDeviceIdx(deviceID)].ip;
  };

  altui_Donate = function(deviceID) {
    var html, htmlDonate;
    htmlDonate = "For those who really like this plugin and feel like it, you can donate what you \nwant here on Paypal. It will not buy you more support not any garantee that this \ncan be maintained or evolve in the future but if you want to show you are happy \nand would like my kids to transform some of the time I steal from them into \nsome <i>concrete</i> returns, please feel very free ( and absolutely not forced \nto ) to donate whatever you want.  thank you !";
    html = "<div>" + htmlDonate + "</div>";
    return set_panel_html(html);
  };

  altui_Settings = function(deviceID) {
    var config, extraCtrl, html, htmlBootstrap, htmlCDN, htmlCTRL, htmlConfig, htmlHome, htmlOpenLocal, htmlRemote, htmlResetConfig, htmlSetConfig, htmlTheme, htmlViewJson, ipaddr, localbootstrap, localcdn, localhome, present, remoteUrl, style, themecss;
    present = get_device_state(deviceID, altui_Svs, 'Present', 1);
    ipaddr = findDeviceIP(deviceID);
    config = get_device_state(deviceID, altui_Svs, 'PluginConfig', 1);
    themecss = get_device_state(deviceID, altui_Svs, 'ThemeCSS', 1);
    localhome = get_device_state(deviceID, altui_Svs, 'LocalHome', 1);
    localcdn = get_device_state(deviceID, altui_Svs, 'LocalCDN', 1);
    localbootstrap = get_device_state(deviceID, altui_Svs, 'LocalBootstrap', 1);
    extraCtrl = get_device_state(deviceID, altui_Svs, 'ExtraController', 1);
    remoteUrl = get_device_state(deviceID, altui_Svs, 'RemoteAccess', 1);
    style = "<style>\n	table.altui_table td:first-child {\n		width: 140px\n	}\n	input.altui-ui-input {\n		width: 440px\n	}\n	hr.altui_hr {\n		border: 0\n		color: grey\n		margin-top: 5px\n		margin-bottom: 5px\n		background-color: grey\n		height: 1px\n	}\n</style>";
    htmlOpenLocal = "<button class=\"btn btn-default btn-sm\" id=\"altui-open-local\">Local</button>";
    htmlRemote = "<button class=\"btn btn-default btn-sm\" id=\"altui-open-remote\">Remote</button>";
    htmlConfig = "<textarea id=\"altui-config\" rows=\"6\" cols=\"70\"></textarea>";
    htmlTheme = "<input id=\"altui-theme\" class=\"altui-ui-input form-control\" placeholder=\"Url to download a theme css\"></input>";
    htmlHome = "<input id=\"altui-home\" class=\"altui-ui-input form-control\" placeholder=\"options, see below\"></input>";
    htmlCDN = "<input \n	id=\"altui-cdn\" \n	class=\"altui-ui-input form-control\" \n	placeholder=\"optional localcdn pathname, uses internet otherwise\">\n</input>";
    htmlBootstrap = "<input \n	id=\"altui-localbootstrap\" \n	class=\"altui-ui-input form-control\" \n	placeholder=\"optional local bootstrap relative url, use internet otherwise\">\n</input>";
    htmlCTRL = "<input \n	id=\"altui-ctrl\" \n	class=\"altui-ui-input form-control\" \n	placeholder=\"Comma separated list of ip_addr for extra controllers\">\n</input>";
    htmlSetConfig = "<button class=\"btn btn-default btn-sm\" id=\"altui-setconfig\">\n	Set Configuration\n</button>";
    htmlResetConfig = "<button class=\"btn btn-default btn-sm\" id=\"altui-resetconfig\">\n	Default Configuration\n</button>";
    htmlViewJson = "<button class=\"btn btn-default btn-sm\" id=\"altui-viewconfig\">\n	View Configuration\n</button>";
    html = style + ("<div class=\"pane\" id=\"pane\"> \n	<table class=\"altui_table\" id=\"altui_table\">\n		<tr>\n			<td>Open</td>\n			<td><div class=\"btn-group\">" + htmlOpenLocal + htmlRemote + "</div></td>\n		</tr>\n		<tr>\n			<td>Theme</td>\n			<td> " + htmlTheme + " </td>\n		</tr>\n		<tr>\n			<td>Home Page Url Parameters</td>\n			<td> " + htmlHome + " </td>\n		</tr>\n		<tr>\n			<td>url options</td>\n			<td>\n				<ul>\n					<li><b>home</b>=(pageHome , \n									 pageRooms , \n									 pageDevices , \n									 pageScenes , \n									 pageSceneEdit , \n									 pagePlugins , \n									 pageUsePages , \n									 pageEditPages , \n									 pageCredits , \n									 pageLuaTest , \n									 pageLuaStart , \n									 pageOptions , \n									 pageEditor , \n									 pageZwave , \n									 pageLocalization , \n									 pagePower ,\n									 pageChildren , \n									 pageRoutes , \n									 pageQuality , \n									 pageTblDevices , \n									 pageOsCommand)</li>\n					<li><b>lang</b>=(en , fr , it)</li>\n					<li><b>Layout</b>=lean</li>\n				</ul>\n			</td>\n		</tr>\n		<tr>\n			<td>Local CDN ?</td>\n			<td> " + htmlCDN + " </td>\n		</tr>\n		<tr>\n			<td>Local Bootstrap ?</td>\n			<td> " + htmlBootstrap + " </td>\n		</tr>\n		<tr>\n			<td>Extra Controllers</td>\n			<td> " + htmlCTRL + " </td>\n		</tr>\n		<tr>\n			<td>Config</td>\n			<td> " + htmlConfig + " </td>\n		</tr>\n		<tr>\n			<td>Actions</td>\n			<td> " + htmlViewJson + htmlSetConfig + htmlResetConfig + "</td>\n		</tr>\n	</table>\n</div>");
    set_panel_html(html);
    $("#altui-theme").val(themecss);
    $("#altui-home").val(localhome);
    $("#altui-cdn").val(localcdn);
    $("#altui-localbootstrap").val(localbootstrap);
    $("#altui-ctrl").val(extraCtrl);
    $("#altui-config").text(config);
    $("#altui-theme").text(themecss).change(function() {
      themecss = $(this).val() + ' ';
      return saveVar(deviceID, altui_Svs, "ThemeCSS", themecss, true);
    });
    $("#altui-home").change(function() {
      var home;
      home = $(this).val() + ' ';
      return saveVar(deviceID, altui_Svs, "LocalHome", home, true);
    });
    $("#altui-cdn").change(function() {
      var cdn;
      cdn = $(this).val();
      return saveVar(deviceID, altui_Svs, "LocalCDN", cdn, true);
    });
    $("#altui-localbootstrap").change(function() {
      var bootstrap;
      bootstrap = $(this).val();
      return saveVar(deviceID, altui_Svs, "LocalBootstrap", bootstrap, true);
    });
    $("#altui-ctrl").change(function() {
      var ctrl;
      ctrl = $(this).val();
      return saveVar(deviceID, altui_Svs, "ExtraController", ctrl, true);
    });
    $("#altui-open-remote").click(function() {
      return window.open(remoteUrl, '_blank');
    });
    if (window.location.hostname.indexOf("relay") !== -1) {
      $("#altui-open-local").remove();
    } else {
      $("#altui-open-local").click(function() {
        var url;
        url = window.location.origin + "/port_3480/data_request?id=lr_ALTUI_Handler&command=home&" + $("#altui-home").val();
        return window.open(url, '_blank');
      });
    }
    $("#altui-setconfig").click(function() {
      var varVal;
      varVal = $("#altui-config").val();
      return saveVar(deviceID, altui_Svs, 'PluginConfig', varVal, true);
    });
    $("#altui-viewconfig").click(function() {
      var url, varVal;
      varVal = $("#altui-config").val();
      url = "http://jsoneditoronline.org/?json=" + varVal;
      return window.open(url, '_blank');
    });
    return $("#altui-resetconfig").click(function() {
      var url;
      url = buildUPnPActionUrl(deviceID, altui_Svs, 'Reset');
      return $.ajax({
        type: "GET",
        url: url,
        cache: false
      }).done(function() {
        return setTimeout(function() {
          config = get_device_state(deviceID, altui_Svs, 'PluginConfig', 1);
          return $("#altui-config").val(config);
        }, 2000);
      }).fail(function() {
        return alert('Reset Failed!');
      });
    });
  };

  saveVar = function(deviceID, service, varname, varVal, reload) {
    return set_device_state(deviceID, altui_Svs, varName, varVal, reload ? 1 : 0);
  };

  buildVeraURL = function(deviceId, fnToUse, varName, varValue) {
    var code;
    if (varValue != null) {
      code = fnToUse + "(\"" + altui_Svs + "\", \"" + varName + "\", \"" + varValue + "\", " + deviceID + ")";
    } else {
      code = fnToUse + "(\"" + altui_Svs + "\", \"" + varName + "\", " + deviceID + ")";
    }
    return ("" + ip_address) + $.params({
      id: 'lu_action',
      serviceId: 'urn:micasaverde-com:serviceId:HomeAutomationGateway1',
      action: 'RunLua',
      Code: code
    });
  };

  buildVariableSetUrl = function(deviceID, varName, varValue) {
    return ("" + ip_address) + $.params({
      id: 'variableset',
      DeviceNum: deviceID,
      serviceId: altui_Svs,
      Variable: varName,
      Value: varValue
    });
  };

  buildUPnpActionUrl = function(deviceID, service, action, params) {
    var i, j, len, paramList, value;
    paramList = {
      id: 'action',
      output_format: json,
      DeviceNum: deviceID,
      serviceId: service,
      action: action
    };
    for (i = j = 0, len = params.length; j < len; i = ++j) {
      value = params[i];
      paramList[i] = value;
    }
    return ("" + ip_address) + $.params(paramList);
  };

}).call(this);
